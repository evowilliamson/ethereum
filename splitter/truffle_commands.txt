
"0xca35b7d915458ef540ade6068dfe2f44e8fa733c", "0x14723a09acff6d2a60dcdf7aa4aff308fddc160c"
ganache-cli --accounts=5

const Promise = require('bluebird');
Promise.promisifyAll(web3.eth, { suffix: "Promise" });
Promise.promisifyAll(web3.version, { suffix: "Promise" });
web3.eth.getAccountsPromise().then(_accounts => accounts = _accounts);
Splitter.deployed().then(instance => instance.split(accounts[1], accounts[2], {from: accounts[0], value: 10000000000000000000, gasPrice: 100000000000})).then(_txObj => txObj = _txObj).catch(console.error);
Splitter.deployed().then(instance => instance.getBalance()).then(newResult => result = newResult).catch(console.error);
Splitter.deployed().then(instance => instance.withdraw(5000000000000000000, { from: accounts[1], gasPrice: 100000000000 })).then(_txObj => txObj = _txObj).catch(console.error);
Splitter.deployed().then(instance => instance.getBalance()).then(newResult => result = newResult).catch(console.error);
Splitter.deployed().then(instance => instance.withdraw(5000000000000000000, { from: accounts[2] gasPrice: 100000000000 })).then(_txObj => txObj = _txObj).catch(console.error);
Splitter.deployed().then(instance => instance.getBalance()).then(newResult => result = newResult).catch(console.error);
Splitter.deployed().then(instance => instance.destruct({ from: accounts[0] })).then(newResult => result = newResult).catch(console.error);

Splitter.deployed().then(instance => instance.getBalance.call().then(newResult => result = newResult).catch(console.error);


web3.eth.getBalancePromise(accounts[1]).then(function(balance) { console.log(balance.toString());});



100000000000000000000
104997845800000000000
     2154200000000000




100000000000 * 21542

Benifciary did not withdraw 5000000000000000000, gasPrice: 100000000000, getGasUsedInWei: 2154200000000000, balance before: 119989333152900000000, balanceAfter: 124987178952900000000

119989333152900000000 + 5000000000000000000 = 124989333152900000000



124987178952900000000
     2154200000000000 - 124989333152900000000